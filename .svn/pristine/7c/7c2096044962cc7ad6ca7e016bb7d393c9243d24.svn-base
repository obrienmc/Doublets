import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Links {

	Map<String, Set<String>> allCandidates;

	public Links(String filename) {
		allCandidates = new HashMap<String, Set<String>>();
		try {
			populateCandidates(filename);
		} catch (FileNotFoundException e) {
			System.out.print("Bad File");
		}
	}

	public Set<String> getCandidates(String word) {
		return allCandidates.get(word);
	}

	private void populateCandidates(String filename)
			throws FileNotFoundException {
		File file = new File(filename);

		Scanner scanner1 = new Scanner(file);
		Scanner scanner2;
		String word;
		String currentWord;
		while (scanner1.hasNextLine()) {
			word = scanner1.nextLine();
			scanner2 = new Scanner(file);
			Set<String> wordSet = new HashSet<String>();
			while (scanner2.hasNextLine()) {
				currentWord = scanner2.nextLine();
				if (isCandidate(word, currentWord)) {
					wordSet.add(currentWord);
				}
			}
			if (wordSet.isEmpty())
				allCandidates.put(word, null);
			else
				allCandidates.put(word, wordSet);
			scanner2.close();
		}
		scanner1.close();
	}

	private boolean isCandidate(String s1, String s2) {
		if (s1.length() != s2.length() || s1.equals(s2))
			return false;
		int count = 0; // keeps track of the number of chars that are different
		for (int i = 0; i < s1.length(); i++) {
			if (s1.charAt(i) != s2.charAt(i))
				count++;
			if (count > 1)
				return false;
		}
		return true;
	}
}
